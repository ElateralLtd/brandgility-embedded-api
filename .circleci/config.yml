job-defaults: &job-defaults
  docker:
    - image: circleci/node:14.5.0

version: 2
jobs:
  prepare:
    <<: *job-defaults
    steps:
      - checkout
      - run:
          name: Add npmjs.org token
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN_W" >> ./.npmrc
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install packages
          command: yarn --pure-lockfile --no-progress
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Prepare .env
          command: |
            echo NODE_ENV=production > .env
      - persist_to_workspace:
          root: .
          paths:
            - ./*

  test-with-coverage:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run tests with code coverage
          command: yarn run ci:test:coverage
      - store_artifacts:
          path: reports/test/coverage
      - store_artifacts:
          path: reports/test/junit.xml
      - store_test_results:
          path: reports/test/junit.xml
  build:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: yarn run build
      - persist_to_workspace:
          root: .
          paths:
            - lib/*
  build-without-persisting:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: yarn run build
  vulnerabilityAudit:
    docker:
    - image: circleci/node:14.16.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Check Tools Versions
          command: |
            echo "jq version: $(jq --version)"
            echo "npm version: $(npm --version)"
            echo "yarn version: $(yarn --version)"
      - run:
          name: make audit folder
          command: mkdir -p audit
      - run:
          name: Install "audit-html tools"
          command: |
            sudo npm install -g npm-audit-html
      - run:
          name: Create npm lockfile
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN_RO" > ~/.npmrc
            npm i --package-lock-only
      - run:
          name: Create npm html report
          command: |
            set -x; set +e; npm audit --json | npm-audit-html --output audit/npm-audit.html; set -e; exit 0
      - run:
          name: Create audit jsons
          command: |
            set -x; set +e; \
            npm audit --json > audit/audit-results-npm.json; \
            echo "npm version: $(npm --version)" > audit/audit-summary-npm; chmod 666 audit/audit-summary-npm; \
            set -e; exit 0
      - run:
          name: Summary collect
          command: |
            bin/summary-npm.sh >> audit/audit-summary-npm
      - store_artifacts:
          path: ./audit
  deploy:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: .
      - deploy:
          command: yarn run deploy
  update-master:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "8b:c1:3f:ed:f6:5d:a8:85:c9:70:56:88:8f:87:11:49"
      - run:
          name: Create ~/.ssh
          command: |
            mkdir -p ~/.ssh
      - run:
          name: Disable SSH strict host key checking
          command: |
            cat >> ~/.ssh/config << EOF
            VerifyHostKeyDNS yes
            StrictHostKeyChecking no
            EOF
      - run:
          name: Update master if version is increased
          command: yarn run update-master-if-version-is-increased

workflows:
  version: 2

  check-status:
    jobs:
      - prepare:
          context: org-global
          filters:
            branches:
              ignore: master
      - vulnerabilityAudit:
            context: org-global
            requires:
              - prepare
      - test-with-coverage:
          context: org-global
          requires:
            - prepare
      - build-without-persisting:
          context: org-global
          requires:
            - prepare
  update-master:
    jobs:
      - prepare:
          context: org-global
          filters:
            branches:
              only: develop
      - update-master:
          context: org-global
          requires:
            - prepare
  build-and-deploy:
    jobs:
      - prepare:
          context: org-global
          filters:
            branches:
              only: master
      - test-with-coverage:
          context: org-global
          requires:
            - prepare
      - build:
          context: org-global
          requires:
            - prepare
      - deploy:
          context: org-global
          requires:
            - build
            - test-with-coverage
